swagger: "2.0"
info:
  version: 1.0.0
  title: nxplorerjs-microservice
  description: Express Microservice Starter
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
securityDefinitions:
 Bearer:
  description: |
   For accessing the API a valid JWT token must be passed in all the queries in
   the 'Authorization' header.


   A valid JWT token is generated by the API and retourned as answer of a call
   to the route /login giving a valid user & password.


   The following syntax must be used in the 'Authorization' header :

       Bearer xxxxxx.yyyyyyy.zzzzzz
  type: apiKey
  name: Authorization
  in: header
definitions:
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        description: The example name
  LoginBody:
    type: object
    title: user login
    required:
      - email
      - password
      - role
    properties:
      email:
        type: string
        description: The user email
      password:
        type: string
        description: The user password
      role:
        type: string
        description: User Role
        enum:
              - admin
              - guest
  Token:
    type: object
    properties:
      idToken:
        type: string
      expiresIn:
        type: string
paths:
  /login:
    post:
      tags:
        - Login
      description: |
        Login to get JWT Token for API Access
      responses:
        '200':
          description: Returns valid JWT Token
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Unauthorized user
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters: 
        - name: body
          in: body
          description: used credentials
          required: true
          schema: 
            $ref: "#/definitions/LoginBody"
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      security:
        - Bearer: []
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      security:
        - Bearer: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        201:
          description: Example posted
        403:
          description: Forbidden Request

  /examples/{id}:
    get:
      tags:
        - Examples
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not available
  /shop/products:
      get:
        tags:
          - Products
        description: Fetch all examples
        responses:
          200:
            description: Returns all examples
  /shop/products/{id}:
      get:
        tags:
          - Products
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available
  /shop/productOptions:
      get:
        tags:
          - Products
        description: Fetch all examples
        responses:
          200:
            description: Returns all examples
  /shop/productOptions/{id}:
      get:
        tags:
          - Products
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available
  /shop/prices:
      get:
        tags:
          - Products
        description: Fetch all examples
        responses:
          200:
            description: Returns all examples
  /shop/prices/{id}:
      get:
        tags:
          - Products
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available
  /shop/inventory:
      get:
        tags:
          - Products
        description: Fetch all examples
        responses:
          200:
            description: Returns all examples
  /shop/inventory/{id}:
      get:
        tags:
          - Products
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available
  /shop/priceByOptionId/{id}:
      get:
        tags:
          - Products
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available            
  /starwars/people/{id}:
      get:
        tags:
          - Starwars
        parameters:
          - name: id
            in: path
            required: true
            description: The id of the entity to retrieve
            type: integer
          - name: fields
            in: query
            required: false
            description: Custom List of fields to be rendered
            type: string
        responses:
          200:
            description: Return the example with the specified id
          404:
            description: Example not available
  /hystrix-demo/start:
      get:
        tags:
          - Hystrix Demo
        responses:
          200:
            description: Random API Failure
  /hystrix-demo/posts:
      get:
        tags:
          - Hystrix Demo for Posts API
        parameters:
          - name: timeOut
            in: query
            required: false
            description: Time Out Value
            type: integer
        responses:
          200:
            description: Posts API Timeout Failure with Fallback